// src/app/api/test-pdf/route.ts - –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
import { NextRequest, NextResponse } from 'next/server'
import { PDFCertificateGenerator } from '@/lib/pdf-generator'

export async function GET() {
    try {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é PDF —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞...')

        // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        const testData = {
            ticketId: 'test-ticket-001',
            qrCode: 'test-qr-123456',
            result: 'AUTHENTIC' as const,
            comment: '–ü–æ—Å–ª–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –≤—Å–µ—Ö –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –≤–∫–ª—é—á–∞—è –ø—Ä–æ–≤–µ—Ä–∫—É –ª–æ–≥–æ—Ç–∏–ø–∞, —à–≤–æ–≤, —Ñ—É—Ä–Ω–∏—Ç—É—Ä—ã –∏ —Å–µ—Ä–∏–π–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –∏–∑–¥–µ–ª–∏—è Louis Vuitton. –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º –∫–∞—á–µ—Å—Ç–≤–∞ –±—Ä–µ–Ω–¥–∞.',
            clientEmail: 'test@example.com',
            images: [
                {
                    id: 'img-1',
                    url: 'https://example.com/image1.jpg',
                    type: 'INITIAL'
                },
                {
                    id: 'img-2',
                    url: 'https://example.com/image2.jpg',
                    type: 'INITIAL'
                },
                {
                    id: 'img-3',
                    url: 'https://example.com/image3.jpg',
                    type: 'ADDITIONAL'
                }
            ],
            expertName: 'Test Expert',
            issuedAt: new Date()
        }

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
        const pdfBuffer = await PDFCertificateGenerator.generateCertificate(testData)
        const fileName = PDFCertificateGenerator.generateFileName(testData.ticketId)

        console.log('‚úÖ PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
        console.log('üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞:', pdfBuffer.length, '–±–∞–π—Ç')
        console.log('üìÅ –ò–º—è —Ñ–∞–π–ª–∞:', fileName)

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º PDF –∫–∞–∫ download
        return new NextResponse(pdfBuffer, {
            headers: {
                'Content-Type': 'application/pdf',
                'Content-Disposition': `attachment; filename="${fileName}"`,
                'Content-Length': pdfBuffer.length.toString()
            }
        })

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è PDF:', error)

        return NextResponse.json({
            error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π PDF',
            details: error instanceof Error ? error.message : 'Unknown error'
        }, { status: 500 })
    }
}