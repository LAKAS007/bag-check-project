// src/app/api/tickets/[id]/request-photos/route.ts
import { NextRequest, NextResponse } from 'next/server'
import { TicketService } from '@/lib/services/tickets'
import { EmailService } from '@/lib/services/email'
import { ApiResponse } from '@/types'

type RouteContext = {
    params: Promise<{ id: string }>
}

// POST /api/tickets/[id]/request-photos - –∑–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ
export async function POST(
    request: NextRequest,
    context: RouteContext
) {
    try {
        const { id } = await context.params
        const { description } = await request.json()

        console.log('üì∏ –ó–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ –¥–ª—è —Ç–∏–∫–µ—Ç–∞:', id)

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!description || description.trim().length === 0) {
            return NextResponse.json<ApiResponse>({
                success: false,
                error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞'
            }, { status: 400 })
        }

        if (description.length > 500) {
            return NextResponse.json<ApiResponse>({
                success: false,
                error: '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 500 —Å–∏–º–≤–æ–ª–æ–≤'
            }, { status: 400 })
        }

        // –ü–æ–ª—É—á–∞–µ–º —Ç–∏–∫–µ—Ç
        const ticket = await TicketService.findById(id)
        if (!ticket) {
            return NextResponse.json<ApiResponse>({
                success: false,
                error: '–¢–∏–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω'
            }, { status: 404 })
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
        if (ticket.status === 'COMPLETED') {
            return NextResponse.json<ApiResponse>({
                success: false,
                error: '–ù–µ–ª—å–∑—è –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–≥–æ —Ç–∏–∫–µ—Ç–∞'
            }, { status: 400 })
        }

        console.log('üìù –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ:', description.trim())

        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ (—ç—Ç–æ —Ç–∞–∫–∂–µ –æ–±–Ω–æ–≤–∏—Ç —Å—Ç–∞—Ç—É—Å –Ω–∞ NEEDS_MORE_PHOTOS)
        const photoRequest = await TicketService.createPhotoRequest(id, description.trim())

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email —Å –∑–∞–ø—Ä–æ—Å–æ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ
        try {
            await EmailService.sendPhotoRequest({
                ticketId: ticket.id,
                clientEmail: ticket.clientEmail,
                description: description.trim(),
                uploadUrl: `${process.env.NEXT_PUBLIC_APP_URL}/upload/additional/${ticket.id}`
            })

            console.log('‚úÖ Email —Å –∑–∞–ø—Ä–æ—Å–æ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:', ticket.clientEmail)

            return NextResponse.json<ApiResponse>({
                success: true,
                data: {
                    ticket: {
                        ...ticket,
                        status: 'NEEDS_MORE_PHOTOS'
                    },
                    photoRequest
                },
                message: '–ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É –Ω–∞ email'
            })

        } catch (emailError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', emailError)

            return NextResponse.json<ApiResponse>({
                success: true,
                data: {
                    ticket: {
                        ...ticket,
                        status: 'NEEDS_MORE_PHOTOS'
                    },
                    photoRequest
                },
                warning: '–ó–∞–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email –∫–ª–∏–µ–Ω—Ç—É'
            })
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ:', error)

        return NextResponse.json<ApiResponse>({
            success: false,
            error: '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞',
            details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
        }, { status: 500 })
    }
}