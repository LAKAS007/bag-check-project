// src/lib/services/email.ts - –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è (—Ç–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç–∞–º)
import * as nodemailer from 'nodemailer'
import { PDFCertificateGenerator, CertificateData } from '@/lib/pdf-generator'

export class EmailService {
    private static transporter = nodemailer.createTransport({
        host: process.env.SMTP_HOST || 'smtp.gmail.com',
        port: parseInt(process.env.SMTP_PORT || '587'),
        secure: false,
        auth: {
            user: process.env.SMTP_USER, // –¢–≤–æ—è Gmail
            pass: process.env.SMTP_PASS  // App Password
        }
    })

    // === –°–¶–ï–ù–ê–†–ò–ô 1: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è –ø–æ–¥–ª–∏–Ω–Ω–æ–π —Å—É–º–∫–∏ ===
    static async sendAuthenticCertificate(params: {
        ticketId: string
        clientEmail: string    // üëà Email –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –ë–î
        comment: string
        brandName: string
        itemType: string
        checkDate: Date
        expertName: string
        qrCode: string
    }): Promise<void> {
        try {
            console.log('üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏:')
            console.log('   - –û—Ç:', process.env.SMTP_USER)
            console.log('   - –ö–ª–∏–µ–Ω—Ç—É:', params.clientEmail)
            console.log('   - –¢–∏–∫–µ—Ç:', params.ticketId)

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
            const certificateData: CertificateData = {
                ticketId: params.ticketId,
                clientEmail: params.clientEmail,
                result: 'AUTHENTIC',
                comment: params.comment,
                brandName: params.brandName,
                itemType: params.itemType,
                checkDate: params.checkDate,
                expertName: params.expertName,
                qrCode: params.qrCode
            }

            const certificateBuffer = await PDFCertificateGenerator.generateCertificate(certificateData)

            const mailOptions = {
                from: `"BagCheck - –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—É–º–æ–∫" <${process.env.SMTP_USER}>`,
                to: params.clientEmail,
                subject: `‚úÖ –í–∞—à–∞ —Å—É–º–∫–∞ –ø–æ–¥–ª–∏–Ω–Ω–∞—è! –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≥–æ—Ç–æ–≤ - ${params.ticketId}`,
                html: this.generateAuthenticEmailHTML(params),
                attachments: [
                    {
                        filename: `certificate-${params.ticketId}.html`,
                        content: certificateBuffer,
                        contentType: 'text/html'
                    }
                ]
            }

            const info = await this.transporter.sendMail(mailOptions)
            console.log('‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:', info.messageId)

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:', error)
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ email ${params.clientEmail}`)
        }
    }

    // === –°–¶–ï–ù–ê–†–ò–ô 2: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–¥–µ–ª–∫–µ ===
    static async sendFakeNotification(params: {
        ticketId: string
        clientEmail: string    // üëà Email –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –ë–î
        comment: string
        brandName: string
        itemType: string
        checkDate: Date
        expertName: string
    }): Promise<void> {
        try {
            console.log('üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–¥–µ–ª–∫–µ:')
            console.log('   - –û—Ç:', process.env.SMTP_USER)
            console.log('   - –ö–ª–∏–µ–Ω—Ç—É:', params.clientEmail)

            const mailOptions = {
                from: `"BagCheck - –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—É–º–æ–∫" <${process.env.SMTP_USER}>`,
                to: params.clientEmail,
                subject: `‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: —Ç–æ–≤–∞—Ä –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥–ª–∏–Ω–Ω—ã–º - ${params.ticketId}`,
                html: this.generateFakeEmailHTML(params)
            }

            const info = await this.transporter.sendMail(mailOptions)
            console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–¥–µ–ª–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', info.messageId)

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error)
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ email ${params.clientEmail}`)
        }
    }

    // === –°–¶–ï–ù–ê–†–ò–ô 3: –ó–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ ===
    static async sendPhotoRequest(params: {
        ticketId: string
        clientEmail: string    // üëà Email –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –ë–î
        description: string
        uploadUrl: string
    }): Promise<void> {
        try {
            console.log('üìß –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ:')
            console.log('   - –û—Ç:', process.env.SMTP_USER)
            console.log('   - –ö–ª–∏–µ–Ω—Ç—É:', params.clientEmail)

            const mailOptions = {
                from: `"BagCheck - –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—É–º–æ–∫" <${process.env.SMTP_USER}>`,
                to: params.clientEmail,
                subject: `üì∏ –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ - ${params.ticketId}`,
                html: this.generatePhotoRequestEmailHTML(params)
            }

            const info = await this.transporter.sendMail(mailOptions)
            console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:', info.messageId)

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ —Ñ–æ—Ç–æ:', error)
            throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ email ${params.clientEmail}`)
        }
    }

    // === HTML –®–ê–ë–õ–û–ù–´ ===

    private static generateAuthenticEmailHTML(params: {
        ticketId: string
        comment: string
        brandName: string
        itemType: string
        checkDate: Date
        expertName: string
        qrCode: string
    }): string {
        return `
        <!DOCTYPE html>
        <html lang="ru">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ BagCheck</title>
            ${this.getEmailStyles()}
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <div class="logo">üõ°Ô∏è BagCheck</div>
                    <div>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</div>
                </div>
                
                <div class="content">
                    <h2>–û—Ç–ª–∏—á–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å! üéâ</h2>
                    
                    <div class="result-box authentic">
                        <div class="result-text">‚úÖ –í–∞—à–∞ —Å—É–º–∫–∞ –ø–æ–¥–ª–∏–Ω–Ω–∞—è!</div>
                        <div class="result-subtext">${params.brandName} ‚Ä¢ ${params.itemType}</div>
                    </div>
                    
                    <p>–ù–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞.</p>
                    
                    <div class="details">
                        <div class="detail-row">
                            <span class="detail-label">–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏:</span>
                            <span class="detail-value">${params.ticketId}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:</span>
                            <span class="detail-value">${this.formatDate(params.checkDate)}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">–≠–∫—Å–ø–µ—Ä—Ç:</span>
                            <span class="detail-value">${params.expertName}</span>
                        </div>
                    </div>
                    
                    ${params.comment ? `
                        <div class="comment-section">
                            <strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —ç–∫—Å–ø–µ—Ä—Ç–∞:</strong><br>
                            ${params.comment}
                        </div>
                    ` : ''}
                    
                    <div class="certificate-info">
                        <h3>üìú –í–∞—à —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏</h3>
                        <p>–ö —ç—Ç–æ–º—É –ø–∏—Å—å–º—É –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏. –í—ã –º–æ–∂–µ—Ç–µ:</p>
                        <ul>
                            <li>–û—Ç–∫—Ä—ã—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ –ª—é–±–æ–º –±—Ä–∞—É–∑–µ—Ä–µ</li>
                            <li>–†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å –¥–ª—è –≤–∞—à–∏—Ö –∑–∞–ø–∏—Å–µ–π</li>
                            <li>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å QR –∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏</li>
                        </ul>
                        <p><strong>–°—Å—ã–ª–∫–∞ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:</strong> 
                           <a href="${process.env.NEXT_PUBLIC_APP_URL}/verify/${params.qrCode}">
                               ${process.env.NEXT_PUBLIC_APP_URL}/verify/${params.qrCode}
                           </a>
                        </p>
                    </div>
                    
                    <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ BagCheck! üíô</p>
                </div>
                
                ${this.getEmailFooter()}
            </div>
        </body>
        </html>
        `
    }

    private static generateFakeEmailHTML(params: {
        ticketId: string
        comment: string
        brandName: string
        itemType: string
        checkDate: Date
        expertName: string
    }): string {
        return `
        <!DOCTYPE html>
        <html lang="ru">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ BagCheck</title>
            ${this.getEmailStyles()}
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <div class="logo">üõ°Ô∏è BagCheck</div>
                    <div>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</div>
                </div>
                
                <div class="content">
                    <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏</h2>
                    
                    <div class="result-box fake">
                        <div class="result-text">‚ùå –¢–æ–≤–∞—Ä –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥–ª–∏–Ω–Ω—ã–º</div>
                        <div class="result-subtext">${params.brandName} ‚Ä¢ ${params.itemType}</div>
                    </div>
                    
                    <p>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏, —á—Ç–æ –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥–¥–µ–ª–∫–æ–π.</p>
                    
                    <div class="details">
                        <div class="detail-row">
                            <span class="detail-label">–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏:</span>
                            <span class="detail-value">${params.ticketId}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:</span>
                            <span class="detail-value">${this.formatDate(params.checkDate)}</span>
                        </div>
                        <div class="detail-row">
                            <span class="detail-label">–≠–∫—Å–ø–µ—Ä—Ç:</span>
                            <span class="detail-value">${params.expertName}</span>
                        </div>
                    </div>
                    
                    <div class="comment-section">
                        <strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —ç–∫—Å–ø–µ—Ä—Ç–∞:</strong><br>
                        ${params.comment}
                    </div>
                    
                    <div style="background: #fffbeb; padding: 20px; border-radius: 8px; border-left: 4px solid #f59e0b; margin: 20px 0;">
                        <h3 style="color: #92400e; margin-bottom: 10px;">‚ÑπÔ∏è –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?</h3>
                        <p style="color: #451a03; margin: 0;">
                            –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, 
                            –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ email.
                        </p>
                    </div>
                    
                    <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ BagCheck.</p>
                </div>
                
                ${this.getEmailFooter()}
            </div>
        </body>
        </html>
        `
    }

    private static generatePhotoRequestEmailHTML(params: {
        ticketId: string
        description: string
        uploadUrl: string
    }): string {
        return `
        <!DOCTYPE html>
        <html lang="ru">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>–ó–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ BagCheck</title>
            ${this.getEmailStyles()}
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <div class="logo">üõ°Ô∏è BagCheck</div>
                    <div>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</div>
                </div>
                
                <div class="content">
                    <h2>–ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ üì∏</h2>
                    
                    <p>–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞—à–µ–º—É —ç–∫—Å–ø–µ—Ä—Ç—É —Ç—Ä–µ–±—É—é—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.</p>
                    
                    <div class="details">
                        <div class="detail-row">
                            <span class="detail-label">–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏:</span>
                            <span class="detail-value">${params.ticketId}</span>
                        </div>
                    </div>
                    
                    <div class="comment-section">
                        <strong>–ß—Ç–æ –Ω—É–∂–Ω–æ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å:</strong><br>
                        ${params.description}
                    </div>
                    
                    <div class="upload-section">
                        <h3>üì§ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ</h3>
                        <p>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏:</p>
                        <div style="text-align: center; margin: 30px 0;">
                            <a href="${params.uploadUrl}" class="upload-button">
                                –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                            </a>
                        </div>
                        <p style="font-size: 14px; color: #64748b;">
                            –ò–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä: <br>
                            <code style="background: #f1f5f9; padding: 4px 8px; border-radius: 4px;">${params.uploadUrl}</code>
                        </p>
                    </div>
                    
                    <p>–ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–∞—à —ç–∫—Å–ø–µ—Ä—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.</p>
                    
                    <p>–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ! üíô</p>
                </div>
                
                ${this.getEmailFooter()}
            </div>
        </body>
        </html>
        `
    }

    // –û–±—â–∏–µ —Å—Ç–∏–ª–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã
    private static getEmailStyles(): string {
        return `
        <style>
            body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif; line-height: 1.6; color: #334155; margin: 0; padding: 20px; background-color: #f8fafc; }
            .container { max-width: 600px; margin: 0 auto; background: white; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); }
            .header { background: linear-gradient(135deg, #1e40af, #3b82f6); color: white; padding: 30px; text-align: center; }
            .logo { font-size: 24px; font-weight: bold; margin-bottom: 10px; }
            .content { padding: 30px; }
            .result-box { text-align: center; padding: 20px; margin: 20px 0; border-radius: 8px; }
            .result-box.authentic { background-color: #f0fdf4; border: 2px solid #059669; }
            .result-box.fake { background-color: #fef2f2; border: 2px solid #dc2626; }
            .result-text { font-size: 24px; font-weight: bold; margin-bottom: 10px; }
            .result-box.authentic .result-text { color: #059669; }
            .result-box.fake .result-text { color: #dc2626; }
            .result-subtext { font-size: 14px; color: #64748b; }
            .details { background: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0; }
            .detail-row { display: flex; justify-content: space-between; margin-bottom: 10px; padding-bottom: 10px; border-bottom: 1px solid #e2e8f0; }
            .detail-row:last-child { border-bottom: none; margin-bottom: 0; padding-bottom: 0; }
            .detail-label { font-weight: 600; color: #64748b; }
            .detail-value { color: #334155; }
            .comment-section { background: #fffbeb; padding: 15px; border-radius: 6px; border-left: 4px solid #f59e0b; margin: 20px 0; }
            .comment-section strong { color: #92400e; }
            .upload-button { display: inline-block; background: #1e40af; color: white !important; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-weight: 600; font-size: 16px; }
            .upload-section { background: #f8fafc; padding: 20px; border-radius: 8px; margin: 20px 0; }
            .footer { background: #f8fafc; padding: 20px; text-align: center; font-size: 14px; color: #64748b; }
        </style>
        `
    }

    private static getEmailFooter(): string {
        return `
        <div class="footer">
            <p><strong>BagCheck</strong> - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏—Ö —Å—É–º–æ–∫</p>
            <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –Ω–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ.</p>
        </div>
        `
    }

    private static formatDate(date: Date): string {
        return date.toLocaleDateString('ru-RU', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        })
    }
}